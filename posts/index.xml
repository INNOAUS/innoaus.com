<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Innoaus 이노스</title>
    <link>https://innoaus.com/posts/</link>
    <description>Recent content in Blog on Innoaus 이노스</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 04 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://innoaus.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CentOS 7 에 Postgresql Service 설정하기</title>
      <link>https://innoaus.com/posts/20190304_2/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.com/posts/20190304_2/</guid>
      <description>다음은 소스코드를 이용하여 빌드하였거나 복사한 데이터베이스를 서비스로 동작하기 위한 방법을 정리한 것입니다.
서비스 스크립트 작성 $ vi postgresql.service # Systemd service definition for postgresql-bdr94 # # It&#39;s not recommended to modify this file in-place, because it will be # overwritten during package upgrades. If you want to customize, the # best way is to create a file &amp;quot;/etc/systemd/system/postgresql-9.4.service&amp;quot;, # containing # .include /lib/systemd/system/postgresql-9.4.service # ...make your changes here... # For more info about custom unit files, see # http://fedoraproject.</description>
    </item>
    
    <item>
      <title>CentOS7에 PostgreSQL Multi-Master 데이터베이스 Postgresql-BDR 9.4 설치하기</title>
      <link>https://innoaus.com/posts/20190304_1/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.com/posts/20190304_1/</guid>
      <description>다음은 2ndQuadrant사에서 만든 PostgreSQL Multi-Master 플러그인 bdr(Bidirectional Replication Plugin)을 설치방법을 정리한 것입니다.
Postgres-BDR 을 소스코드 컴파일 하여 설치하기 소스코드를 컴파일하기 위해서 gcc 컴파일러를 설치해야 합니다.
여기서는 gcc 7을 사용할 것입니다.
gcc 7 인스톨 관련 글
준비사항 $ sudo yum -y install centos-release-scl $ sudo yum -y install devtoolset-7 $ sudo yum -y install readline-devel bison-devel bison flex-devel flex zlib-devel $ sudo yum -y install git  Postgres-BDR-9.4 설치하기 최신 소스코드를 $HOME/2ndquadrant_bdr 폴더에 다운로드한 후 컴파일 합니다.</description>
    </item>
    
    <item>
      <title>CentOS 6/7 에 gcc 7 및 관련된 개발도구 설치하기</title>
      <link>https://innoaus.com/posts/20190303/</link>
      <pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.com/posts/20190303/</guid>
      <description>SoftwareCollections.org 프로젝트 SoftwareCollections.org 프로젝트는 레드헷(Red Hat Enterprise Linux), Fedora, CentOS, 그리고 Scientific Linux를 위한 Software Collections(SCLs)를 만드는 프로젝트 입니다. https://www.softwarecollections.org
이 것은 패키지간의 영향없이 하나의 시스템에 다양한 버전을 설치하여 개발에 도움을 줍니다.
Software Collection 패키지 설치하기 $ sudo yum -y install centos-release-scl Loaded plugins: fastestmirror Determining fastest mirrors * base: data.aonenetworks.kr * extras: data.aonenetworks.kr * updates: data.aonenetworks.kr base | 3.6 kB 00:00:00 extras | 3.4 kB 00:00:00 updates | 3.</description>
    </item>
    
    <item>
      <title>CentOS 7 에 Cisco VPN 연결을 위한 VPN 클라이언트 vpnc 설치하기</title>
      <link>https://innoaus.com/posts/20190302/</link>
      <pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.com/posts/20190302/</guid>
      <description>vpnc 패키지는 기본 리포지터리에 패키지가 없어 EPEL(Extra Packages for Enterprise Linux) 최신 패키지 목록을 설치해야 합니다.
EPEL 최신 패키지 목록 설치하기 EPEL Site : https://fedoraproject.org/wiki/EPEL
# yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm Loaded plugins: fastestmirror epel-release-latest-7.noarch.rpm | 15 kB 00:00:00 Examining /var/tmp/yum-root-I01hVd/epel-release-latest-7.noarch.rpm: epel-release-7-11.noarch Marking /var/tmp/yum-root-I01hVd/epel-release-latest-7.noarch.rpm to be installed Resolving Dependencies --&amp;gt; Running transaction check ---&amp;gt; Package epel-release.noarch 0:7-11 will be installed --&amp;gt; Finished Dependency Resolution Dependencies Resolved ====================================================================================================================================================== Package Arch Version Repository Size ====================================================================================================================================================== Installing: epel-release noarch 7-11 /epel-release-latest-7.</description>
    </item>
    
    <item>
      <title>Linux 에서 패스워드 입력없이 &#39;sudo&#39; 커멘드 실행하기</title>
      <link>https://innoaus.com/posts/20190301/</link>
      <pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.com/posts/20190301/</guid>
      <description>개발환경 등에서 매번 sudo패스워드를 입력하는 것은 상당히 번거로운 일입니다.
패스워드 입력 없이 sudo 커멘드를 실행 할 수 있는 방법을 소개합니다.
user1 이라는 계정을 가정하여 설명.
sudo 커멘드 실행과 관련된 설정 파일은 /etc/sudoers 파일이고, user1 계정에 대해 패스워드 업력 없도록 설정하기 위하여 이 파일에 설정을 합니다.
/etc/sudoers 파일 수정
# sudo vi /etc/sudoers  관리자 권한으로 구동하는 모든 커멘드에 대해 적용하려면
파일의 끝에
%user1 ALL=(ALL) NOPASSWD: ALL  을 추가.
특정 커멘드(/bin/kill, /bin/rm)에 대해 적용하려면</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 에서 Lambda 함수 호출하기</title>
      <link>https://innoaus.com/posts/20190228/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.com/posts/20190228/</guid>
      <description>Lambda 혹은 anonymous function 개념은 C++11 부터 추가된 것으로 보통 함수와는 달리 함수명이 없는 특징을 가지고 있습니다.
다음은 이러한 익명함수를 호출하는 경험을 간단히 정리한 것입니다.
그리고, 다양한 C++ 컴파일러에서 제공하는 C++ 특징을 정리한 것을 https://en.cppreference.com/w/cpp/compiler_support 에서 확인 할 수 있습니다.
function pointer를 이용한 익명 함수 호출 예제 auto a_lamda_function = [](const std::string&amp;amp; msg) { std::cout &amp;lt;&amp;lt; &amp;quot;function pointer를 이용한 람다함수 호출 예제 : &amp;quot; &amp;lt;&amp;lt; msg &amp;lt;&amp;lt; std::endl; } void (* funcPtr)(int) = a_lamda_function; funcPtr(&amp;quot;Hello World!</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 콘솔 응용프로그램에 색 적용하기</title>
      <link>https://innoaus.com/posts/20190226/</link>
      <pubDate>Tue, 26 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.com/posts/20190226/</guid>
      <description>프로젝트 rang은 Abhinav Gauniyal 이 만든 헤더파일만으로 동작하는 콘솔 텍스트 색 적용하는 오픈소스 라이브러리 입니다. https://github.com/agauniyal/rang
Colors for your Terminal. Unix-like (리눅스, 유닉스, 맥) Windows Demo 라이브러리 의존성 rang은 C++ standard library만으로 동작하므로 별도의 추가 라이브러리는 필요하지 않습니다.
설치 $ git clone https://github.com/agauniyal/rang.git  내 프로젝트에 적용하기 설치 폴더내 include/rang.hpp 파일을 자신의 프로젝트의 적정한 위치에 복사하거나, 설치 폴더의 include 폴더를 프로젝트 경로에 추가합니다.
다양한 설정 Text Styles    Code Linux/Win/Others Old Win     rang::style::bold yes yes   rang::style::dim yes no   rang::style::italic yes no   rang::style::underline yes no   rang::style::blink no no   rang::style::rblink no no   rang::style::reversed yes yes   rang::style::conceal maybe yes   rang::style::crossed yes no    Text Color    Code Linux/Win/Others Old Win     rang::fg::black yes yes   rang::fg::red yes yes   rang::fg::green yes yes   rang::fg::yellow yes yes   rang::fg::blue yes yes   rang::fg::magenta yes yes   rang::fg::cyan yes yes   rang::fg::gray yes yes    Background Color    Code Linux/Win/Others Old Win     rang::bg::black yes yes   rang::bg::red yes yes   rang::bg::green yes yes   rang::bg::yellow yes yes   rang::bg::blue yes yes   rang::bg::magenta yes yes   rang::bg::cyan yes yes   rang::bg::gray yes yes    Bright Foreground Color    Code Linux/Win/Others Old Win     rang::fgB::black yes yes   rang::fgB::red yes yes   rang::fgB::green yes yes   rang::fgB::yellow yes yes   rang::fgB::blue yes yes   rang::fgB::magenta yes yes   rang::fgB::cyan yes yes   rang::fgB::gray yes yes    Bright Background Color    Code Linux/Win/Others Old Win     rang::bgB::black yes yes   rang::bgB::red yes yes   rang::bgB::green yes yes   rang::bgB::yellow yes yes   rang::bgB::blue yes yes   rang::bgB::magenta yes yes   rang::bgB::cyan yes yes   rang::bgB::gray yes yes    Reset Styles/Colors    Code Linux/Win/Others Old Win     rang::style::reset yes yes   rang::fg::reset yes yes   rang::bg::reset yes yes    간단한 sample code #include &amp;quot;rang.</description>
    </item>
    
    <item>
      <title>CentOS 7 에 golang 설치하기</title>
      <link>https://innoaus.com/posts/20190224/</link>
      <pubDate>Sun, 24 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.com/posts/20190224/</guid>
      <description>go 언어는 구글이 만든 프로그래밍 언어로 최근 많은 개발자들이 이 언어를 이용하여 다양한 분야에서 많은 응용시스템을 만들고 있습니다.
예를 들면, Docker, Kubernetes, Hugo, Caddy 등이 있습니다.
설치 전 준비사항 설치 대상 컴퓨터의 모든 사용자가 사용하기를 원하면 sudo 권한이 필요합니다.
만약, 현재 사용자만을 위한다면 필요없습니다.
go 설치하기 2019년 2월 22일 현재 시점의 최신버전은 1.12 입니다.
https://golang.org/dl 을 방문하면 최신버전을 다운로드 할 수 있습니다.
다운로드 다운로드는 웹 사이트를 직접 클릭하거나, console terminal에서 wget 커멘드를 이용하여 다운로드 할 수 있습니다.</description>
    </item>
    
    <item>
      <title>vuepress 사용해보기 (디폴트 테마)</title>
      <link>https://innoaus.com/posts/20190222/</link>
      <pubDate>Fri, 22 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.com/posts/20190222/</guid>
      <description>.vuepress폴더에 theme폴더를 만들고, github의 vuepress디폴트 테마를 참고하면서 필요한 폴더와 파일을 작성하면 자동으로 덥어씌우기가 됩니다.
단, github를 참고하면서 작업을 진행하는 것은 힘드므로 디폴트 테마를 로컬에 복사해서 확인하는 것이 편합니다.
cd dev_docs npx vuepress eject //vuepress는 로컬 인스톨 한 경우는 npx를 이용  .vuepress\theme에 디폴트 테마 파일이 복사됩니다.
*아직 alpha버젼이므로 디렉토리 구성 등은 추후 변경될 수 있습니다.
Home readme.me의 yaml부분에 다음과 같이 설정을 하면 vuepress.vuejs.org의 화면과 같이 표시 됩니다.
home: true heroImage: /hero.</description>
    </item>
    
    <item>
      <title>vuepress 사용해보기 (기본 설정: 메뉴, 사이드바, meta요소등)</title>
      <link>https://innoaus.com/posts/20190220/</link>
      <pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.com/posts/20190220/</guid>
      <description>사이트 공통 항목 설정 메뉴, 사이드바 dev_docs폴더에 about.md를 만듭니다.
.vuepress폴더에 public폴더와 config.js파일을 만들고 다음을 입력합니다.
public폴더에는 정적파일(이미지 파일등)을 넣어 놓는 곳입니다.
module.exports = { themeConfig: { logo : &#39;logo.png&#39;, // \dev_docs\.vuepress\public\logo.png search: true, // 검색기능 nav: [ //헤더 메뉴 { text: &#39;Home&#39;, link: &#39;/&#39; }, { text: &#39;About&#39;, link: &#39;/about.html&#39; }, { text: &#39;서브메뉴&#39;, items: [ { text: &#39;메뉴１&#39;, link: &#39;/&#39; }, { text: &#39;메뉴２&#39;, link: &#39;/about.html&#39; }, ] } ], sidebar: [　//사이드바 링크 [&#39;/&#39;, &#39;사이드바 메뉴１&#39;], [&#39;/about.</description>
    </item>
    
    <item>
      <title>vuepress 사용해보기（환경준비）</title>
      <link>https://innoaus.com/posts/20190218/</link>
      <pubDate>Mon, 18 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.com/posts/20190218/</guid>
      <description>vuepress는 현재 버젼0.x과 1.x alpha 2가지가 있습니다만, 1.x부터는 plugin기능이 강화되어 Blog사이트 등을 구축하기 쉽게 되어 있다고 합니다.
(문서용 사이트만을 만든다면 어느 버젼도 크게 차이가 없을 듯 합니다.)
인스톨 이번은 1.x alpha버젼을 로컬 인스톨 합니다.
작업용 폴더(vuepress_v1_test)를 만든 후
cd vuepress_v1_test npm init -y npm install -D vuepress@next  인스톨이 완료되면 폴더dev_docs를 만듭니다.
vuepress를 로컬 인스톨 한 경우는 vuepress커멘드를 사용할 수 없으므로 npm scripts을 이용합니다.
package.json파일의 scripts부분을 다음과 같이 변경합니다.</description>
    </item>
    
  </channel>
</rss>