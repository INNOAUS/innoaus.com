<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TIP on Innoaus 이노스</title>
    <link>https://innoaus.com/tags/tip/</link>
    <description>Recent content in TIP on Innoaus 이노스</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Fri, 01 Mar 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://innoaus.com/tags/tip/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux 에서 패스워드 입력없이 &#39;sudo&#39; 커멘드 실행하기</title>
      <link>https://innoaus.com/posts/20190301/</link>
      <pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.com/posts/20190301/</guid>
      <description>개발환경 등에서 매번 sudo패스워드를 입력하는 것은 상당히 번거로운 일입니다.
패스워드 입력 없이 sudo 커멘드를 실행 할 수 있는 방법을 소개합니다.
user1 이라는 계정을 가정하여 설명.
sudo 커멘드 실행과 관련된 설정 파일은 /etc/sudoers 파일이고, user1 계정에 대해 패스워드 업력 없도록 설정하기 위하여 이 파일에 설정을 합니다.
/etc/sudoers 파일 수정
# sudo vi /etc/sudoers 관리자 권한으로 구동하는 모든 커멘드에 대해 적용하려면
파일의 끝에
%user1 ALL=(ALL) NOPASSWD: ALL 을 추가.
특정 커멘드(/bin/kill, /bin/rm)에 대해 적용하려면</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 에서 Lambda 함수 호출하기</title>
      <link>https://innoaus.com/posts/20190228/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.com/posts/20190228/</guid>
      <description>Lambda 혹은 anonymous function 개념은 C++11 부터 추가된 것으로 보통 함수와는 달리 함수명이 없는 특징을 가지고 있습니다.
다음은 이러한 익명함수를 호출하는 경험을 간단히 정리한 것입니다.
그리고, 다양한 C++ 컴파일러에서 제공하는 C++ 특징을 정리한 것을 https://en.cppreference.com/w/cpp/compiler_support 에서 확인 할 수 있습니다.
function pointer를 이용한 익명 함수 호출 예제 auto a_lamda_function = [](const std::string&amp;amp; msg) { std::cout &amp;lt;&amp;lt; &amp;#34;function pointer를 이용한 람다함수 호출 예제 : &amp;#34; &amp;lt;&amp;lt; msg &amp;lt;&amp;lt; std::endl; } void (* funcPtr)(int) = a_lamda_function; funcPtr(&amp;#34;Hello World!</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 콘솔 응용프로그램에 색 적용하기</title>
      <link>https://innoaus.com/posts/20190226/</link>
      <pubDate>Tue, 26 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://innoaus.com/posts/20190226/</guid>
      <description>프로젝트 rang은 Abhinav Gauniyal 이 만든 헤더파일만으로 동작하는 콘솔 텍스트 색 적용하는 오픈소스 라이브러리 입니다. https://github.com/agauniyal/rangColors for your Terminal. Unix-like (리눅스, 유닉스, 맥) Windows Demo 라이브러리 의존성 rang은 C++ standard library만으로 동작하므로 별도의 추가 라이브러리는 필요하지 않습니다.
설치 $ git clone https://github.com/agauniyal/rang.git 내 프로젝트에 적용하기 설치 폴더내 include/rang.hpp 파일을 자신의 프로젝트의 적정한 위치에 복사하거나, 설치 폴더의 include 폴더를 프로젝트 경로에 추가합니다.
다양한 설정 Text Styles    Code Linux/Win/Others Old Win     rang::style::bold yes yes   rang::style::dim yes no   rang::style::italic yes no   rang::style::underline yes no   rang::style::blink no no   rang::style::rblink no no   rang::style::reversed yes yes   rang::style::conceal maybe yes   rang::style::crossed yes no    Text Color    Code Linux/Win/Others Old Win     rang::fg::black yes yes   rang::fg::red yes yes   rang::fg::green yes yes   rang::fg::yellow yes yes   rang::fg::blue yes yes   rang::fg::magenta yes yes   rang::fg::cyan yes yes   rang::fg::gray yes yes    Background Color    Code Linux/Win/Others Old Win     rang::bg::black yes yes   rang::bg::red yes yes   rang::bg::green yes yes   rang::bg::yellow yes yes   rang::bg::blue yes yes   rang::bg::magenta yes yes   rang::bg::cyan yes yes   rang::bg::gray yes yes    Bright Foreground Color    Code Linux/Win/Others Old Win     rang::fgB::black yes yes   rang::fgB::red yes yes   rang::fgB::green yes yes   rang::fgB::yellow yes yes   rang::fgB::blue yes yes   rang::fgB::magenta yes yes   rang::fgB::cyan yes yes   rang::fgB::gray yes yes    Bright Background Color    Code Linux/Win/Others Old Win     rang::bgB::black yes yes   rang::bgB::red yes yes   rang::bgB::green yes yes   rang::bgB::yellow yes yes   rang::bgB::blue yes yes   rang::bgB::magenta yes yes   rang::bgB::cyan yes yes   rang::bgB::gray yes yes    Reset Styles/Colors    Code Linux/Win/Others Old Win     rang::style::reset yes yes   rang::fg::reset yes yes   rang::bg::reset yes yes    간단한 sample code #include &amp;#34;rang.</description>
    </item>
    
  </channel>
</rss>
